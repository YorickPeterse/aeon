# Generating of ANSI escape sequences.
#
# This module provides basic support for generating `String` objects wrapped in
# [ANSI escape sequences](https://en.wikipedia.org/wiki/ANSI_escape_code).
#
# # Examples
#
# Making a `String` green:
#
#     import std::ansi
#
#     ansi.green('hello world') # => "\e[32mhello world\e[0m"
import std::conversion::ToString

# The start of every ANSI escape sequence.
let START = "\e["

# The sequence to use for terminating an escape sequence.
let RESET = "\e[0m"

# The code for making text bold.
let BOLD = '1'

# The code for the color red.
let RED = '31'

# The code for the color green.
let GREEN = '32'

# The code for the color cyan.
let CYAN = '36'

# The code for the color yellow.
let YELLOW = '33'

# Wraps a `String` in an ANSI escape sequence.
def wrap(string: ref ToString, code: String) -> String {
  `{START}{code}m{string}{RESET}`
}

# Makes the `String` bold.
def bold(string: ref ToString) -> String {
  wrap(string: string, code: BOLD)
}

# Applies the color red to the given `String`.
def red(string: ref ToString) -> String {
  wrap(string: string, code: RED)
}

# Applies the color green to the given `String`.
def green(string: ref ToString) -> String {
  wrap(string: string, code: GREEN)
}

# Applies the color cyan to the given `String`.
def cyan(string: ref ToString) -> String {
  wrap(string: string, code: CYAN)
}

# Applies the color yellow to the given `String`.
def yellow(string: ref ToString) -> String {
  wrap(string: string, code: YELLOW)
}
