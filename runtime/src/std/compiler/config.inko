# Configuration options for a compiler.
import std::env
import std::fs::path::(IntoPath, Path)

# The default path to the runtime source files.
let DEFAULT_RUNTIME_PATH = '/usr/lib/inko/runtime'

# The file extension of Inko source files.
let SOURCE_EXTENSION = '.inko'

# The name of the constant used to indicate that sending a message should be
# compiled into a VM instruction.
let INSTRUCTION_RECEIVER_NAME = '_INKOC'

# A type for storing compiler settings, such as the source directories to search
# through.
class Config {
  # The source directories to search through when importing a module.
  @source_directories: Array!(Path)

  static def new -> Self {
    Self { @source_directories = Array.new(default_source_directory) }
  }

  def source_directories -> ref Array!(Path) {
    @source_directories
  }

  def add_source_directory(path: IntoPath) {
    @source_directories.push(path.into_path)
  }

  def default_source_directory -> Path {
    Path.new(try env.get('INKO_RUNTIME_PATH').get else DEFAULT_RUNTIME_PATH)
  }
}
