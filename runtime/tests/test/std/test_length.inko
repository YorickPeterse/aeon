import std::length::Length
import std::test::*

class EmptyList {
  static def new -> Self {
    Self {}
  }
}

impl Length for EmptyList {
  def length -> Int {
    0
  }
}

class NonEmptyList {
  static def new -> Self {
    Self {}
  }
}

impl Length for NonEmptyList {
  def length -> Int {
    1
  }
}

def tests(t: ref Tests) {
  t.group('std::length::Length.empty?') do (g) {
    g.test('Checking if an empty object is empty') {
      try assert_true(EmptyList.new.empty?)
    }

    g.test('Checking if a non-empty object is empty') {
      try assert_false(NonEmptyList.new.empty?)
    }
  }
}
