import std::compiler::config::Config
import std::test::*

def tests(t: ref Tests) {
  t.group('std::compiler::config::Config.new') do (g) {
    g.test('Setting the default source directories') {
      let config = Config.new

      try assert_equal(
        config.source_directories,
        Array.new(config.default_source_directory)
      )
    }
  }

  t.group('std::compiler::config::Config.default_source_directory') do (g) {
    g.test('Obtaining the default source directory') {
      let config = Config.new
      let path = config.default_source_directory.to_string

      try assert_true(path.ends_with?('runtime'))
    }
  }

  t.group('std::compiler::config::Config.add_source_directory') do (g) {
    g.test('Adding a source directory') {
      let config = Config.new

      config.add_source_directory('foobar')

      try assert_equal(config.source_directories.length, 2)
      try assert_equal(config.source_directories[-1].to_string, 'foobar')
    }
  }
}
